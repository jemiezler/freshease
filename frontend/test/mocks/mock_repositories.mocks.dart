// Mocks generated by Mockito 5.4.6 from annotations
// in frontend/test/mocks/mock_repositories.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:frontend/core/genai/genai_service.dart' as _i11;
import 'package:frontend/core/genai/models.dart' as _i3;
import 'package:frontend/core/health/health_repository.dart' as _i9;
import 'package:frontend/features/account/domain/entities/user_profile.dart'
    as _i2;
import 'package:frontend/features/account/domain/repositories/user_repository.dart'
    as _i4;
import 'package:frontend/features/shop/data/models/shop_dtos.dart' as _i8;
import 'package:frontend/features/shop/data/product_repository.dart' as _i6;
import 'package:frontend/features/shop/domain/product.dart' as _i7;
import 'package:health/health.dart' as _i10;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserProfile_0 extends _i1.SmartFake implements _i2.UserProfile {
  _FakeUserProfile_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeGenAiResponse_1 extends _i1.SmartFake implements _i3.GenAiResponse {
  _FakeGenAiResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i4.UserRepository {
  MockUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.UserProfile> getCurrentUser() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentUser, []),
            returnValue: _i5.Future<_i2.UserProfile>.value(
              _FakeUserProfile_0(this, Invocation.method(#getCurrentUser, [])),
            ),
          )
          as _i5.Future<_i2.UserProfile>);

  @override
  _i5.Future<_i2.UserProfile> getUserById(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getUserById, [userId]),
            returnValue: _i5.Future<_i2.UserProfile>.value(
              _FakeUserProfile_0(
                this,
                Invocation.method(#getUserById, [userId]),
              ),
            ),
          )
          as _i5.Future<_i2.UserProfile>);

  @override
  _i5.Future<_i2.UserProfile> updateUser(
    String? userId,
    Map<String, dynamic>? userData,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateUser, [userId, userData]),
            returnValue: _i5.Future<_i2.UserProfile>.value(
              _FakeUserProfile_0(
                this,
                Invocation.method(#updateUser, [userId, userData]),
              ),
            ),
          )
          as _i5.Future<_i2.UserProfile>);

  @override
  _i5.Future<_i2.UserProfile> updateCurrentUser(
    Map<String, dynamic>? userData,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateCurrentUser, [userData]),
            returnValue: _i5.Future<_i2.UserProfile>.value(
              _FakeUserProfile_0(
                this,
                Invocation.method(#updateCurrentUser, [userData]),
              ),
            ),
          )
          as _i5.Future<_i2.UserProfile>);
}

/// A class which mocks [ProductRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductRepository extends _i1.Mock implements _i6.ProductRepository {
  MockProductRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i7.Product>> list({
    String? q = '',
    String? category = 'All',
    double? min = 0.0,
    double? max = 99999.0,
    int? limit = 20,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#list, [], {
              #q: q,
              #category: category,
              #min: min,
              #max: max,
              #limit: limit,
              #offset: offset,
            }),
            returnValue: _i5.Future<List<_i7.Product>>.value(<_i7.Product>[]),
          )
          as _i5.Future<List<_i7.Product>>);

  @override
  _i5.Future<_i7.Product?> getProduct(String? productId) =>
      (super.noSuchMethod(
            Invocation.method(#getProduct, [productId]),
            returnValue: _i5.Future<_i7.Product?>.value(),
          )
          as _i5.Future<_i7.Product?>);

  @override
  _i5.Future<List<_i8.ShopCategoryDTO>> getCategories() =>
      (super.noSuchMethod(
            Invocation.method(#getCategories, []),
            returnValue: _i5.Future<List<_i8.ShopCategoryDTO>>.value(
              <_i8.ShopCategoryDTO>[],
            ),
          )
          as _i5.Future<List<_i8.ShopCategoryDTO>>);

  @override
  _i5.Future<List<_i8.ShopVendorDTO>> getVendors() =>
      (super.noSuchMethod(
            Invocation.method(#getVendors, []),
            returnValue: _i5.Future<List<_i8.ShopVendorDTO>>.value(
              <_i8.ShopVendorDTO>[],
            ),
          )
          as _i5.Future<List<_i8.ShopVendorDTO>>);
}

/// A class which mocks [HealthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockHealthRepository extends _i1.Mock implements _i9.HealthRepository {
  MockHealthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> savePoints(List<_i10.HealthDataPoint>? points) =>
      (super.noSuchMethod(
            Invocation.method(#savePoints, [points]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);
}

/// A class which mocks [GenAiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockGenAiService extends _i1.Mock implements _i11.GenAiService {
  MockGenAiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.GenAiResponse> generateDailyMealPlan({
    required String? gender,
    required int? age,
    required double? heightCm,
    required double? weightKg,
    required int? stepsToday,
    required double? activeKcal24h,
    required String? target,
    List<String>? allergies,
    List<String>? preferences,
    String? userId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#generateDailyMealPlan, [], {
              #gender: gender,
              #age: age,
              #heightCm: heightCm,
              #weightKg: weightKg,
              #stepsToday: stepsToday,
              #activeKcal24h: activeKcal24h,
              #target: target,
              #allergies: allergies,
              #preferences: preferences,
              #userId: userId,
            }),
            returnValue: _i5.Future<_i3.GenAiResponse>.value(
              _FakeGenAiResponse_1(
                this,
                Invocation.method(#generateDailyMealPlan, [], {
                  #gender: gender,
                  #age: age,
                  #heightCm: heightCm,
                  #weightKg: weightKg,
                  #stepsToday: stepsToday,
                  #activeKcal24h: activeKcal24h,
                  #target: target,
                  #allergies: allergies,
                  #preferences: preferences,
                  #userId: userId,
                }),
              ),
            ),
          )
          as _i5.Future<_i3.GenAiResponse>);

  @override
  _i5.Future<_i3.GenAiResponse> generateWeeklyMealPlan({
    required String? gender,
    required int? age,
    required double? heightCm,
    required double? weightKg,
    required int? stepsToday,
    required double? activeKcal24h,
    required String? target,
    List<String>? allergies,
    List<String>? preferences,
    String? userId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#generateWeeklyMealPlan, [], {
              #gender: gender,
              #age: age,
              #heightCm: heightCm,
              #weightKg: weightKg,
              #stepsToday: stepsToday,
              #activeKcal24h: activeKcal24h,
              #target: target,
              #allergies: allergies,
              #preferences: preferences,
              #userId: userId,
            }),
            returnValue: _i5.Future<_i3.GenAiResponse>.value(
              _FakeGenAiResponse_1(
                this,
                Invocation.method(#generateWeeklyMealPlan, [], {
                  #gender: gender,
                  #age: age,
                  #heightCm: heightCm,
                  #weightKg: weightKg,
                  #stepsToday: stepsToday,
                  #activeKcal24h: activeKcal24h,
                  #target: target,
                  #allergies: allergies,
                  #preferences: preferences,
                  #userId: userId,
                }),
              ),
            ),
          )
          as _i5.Future<_i3.GenAiResponse>);
}
